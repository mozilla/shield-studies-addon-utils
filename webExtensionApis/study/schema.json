[
  {
    "namespace": "study",
    "description": "Interface for Shield and Pioneer studies.",
    "apiVersion": 6,
    "types": [
      {
        "id": "NullableString",
        "$schema": "http://json-schema.org/draft-04/schema",
        "oneOf": [
          {
            "type": "null"
          },
          {
            "type": "string"
          }
        ],
        "choices": [
          {
            "type": "null"
          },
          {
            "type": "string"
          }
        ],
        "testcases": [null, "a string"]
      },
      {
        "id": "NullableBoolean",
        "$schema": "http://json-schema.org/draft-04/schema",
        "oneOf": [
          {
            "type": "null"
          },
          {
            "type": "boolean"
          }
        ],
        "choices": [
          {
            "type": "null"
          },
          {
            "type": "boolean"
          }
        ],
        "testcases": [null, true, false],
        "failcases": ["1234567890", "foo", []]
      },
      {
        "id": "NullableInteger",
        "$schema": "http://json-schema.org/draft-04/schema",
        "oneOf": [
          {
            "type": "null"
          },
          {
            "type": "integer"
          }
        ],
        "choices": [
          {
            "type": "null"
          },
          {
            "type": "integer"
          }
        ],
        "testcases": [null, 1234567890],
        "failcases": ["1234567890", []]
      },
      {
        "id": "NullableNumber",
        "$schema": "http://json-schema.org/draft-04/schema",
        "oneOf": [
          {
            "type": "null"
          },
          {
            "type": "number"
          }
        ],
        "choices": [
          {
            "type": "null"
          },
          {
            "type": "number"
          }
        ],
        "testcases": [null, 1234567890, 1234567890.123],
        "failcases": ["1234567890", "1234567890.123", []]
      },
      {
        "id": "studyTypesEnum",
        "$schema": "http://json-schema.org/draft-04/schema",
        "type": "string",
        "enum": ["shield", "pioneer"],
        "testcases": ["shield", "pioneer"],
        "failcases": ["foo"]
      },
      {
        "id": "dataPermissionsObject",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shield": {
            "type": "boolean"
          },
          "pioneer": {
            "type": "boolean"
          }
        },
        "required": ["shield", "pioneer"]
      },
      {
        "id": "telemetryPayload",
        "$schema": "http://json-schema.org/draft-04/schema",
        "type": "object",
        "additionalProperties": true,
        "testcase": {
          "foo": "bar"
        }
      },
      {
        "id": "searchTelemetryQuery",
        "$schema": "http://json-schema.org/draft-04/schema",
        "type": "object",
        "properties": {
          "type": {
            "type": ["array"],
            "items": {
              "type": "string"
            },
            "optional": true
          },
          "n": {
            "type": "integer",
            "optional": true
          },
          "minimumTimestamp": {
            "type": "number",
            "optional": true
          },
          "headersOnly": {
            "type": "boolean",
            "optional": true
          }
        },
        "additionalProperties": false,
        "testcase": {
          "type": ["shield-study-addon", "shield-study"],
          "n": 100,
          "minimumTimestamp": 1523968204184,
          "headersOnly": false
        }
      }
    ],
    "functions": [
      {
        "name": "getDataPermissions",
        "type": "function",
        "async": true,
        "description":
          "Object of current dataPermissions (shield enabled true/false, pioneer enabled true/false)",
        "defaultReturn": {
          "shield": true,
          "pioneer": false
        },
        "parameters": [],
        "returns": [
          {
            "$ref": "dataPermissionsObject"
          }
        ]
      },
      {
        "name": "sendTelemetry",
        "type": "function",
        "description":
          "Send Telemetry using appropriate shield or pioneer methods.\n\nNote: The payload must adhere to the `data.attributes` property in the [`shield-study-addon`](https://github.com/mozilla-services/mozilla-pipeline-schemas/blob/dev/templates/include/telemetry/shieldStudyAddonPayload.3.schema.json) schema. That is, it must be a flat object with string keys and string values.\n\nNote:\n- no conversions / coercion of data happens.\n- undefined what happens if validation fails\n\nTBD fix the parameters here.\n",
        "async": true,
        "parameters": [
          {
            "name": "payload",
            "$ref": "telemetryPayload"
          },
          {
            "name": "studyType",
            "$ref": "studyTypesEnum"
          }
        ],
        "defaultReturn": "undefined",
        "returns": null
      },
      {
        "name": "calculateTelemetryPingSize",
        "type": "function",
        "description":
          "Calculate Telemetry using appropriate shield or pioneer methods.\n\nshield:\n- Calculate the size of a ping\n\npioneer:\n- Calculate the size of a ping that has Pioneer encrypted data\n",
        "async": true,
        "parameters": [
          {
            "name": "payload",
            "$ref": "telemetryPayload"
          },
          {
            "name": "studyType",
            "$ref": "studyTypesEnum"
          }
        ],
        "defaultReturn": "undefined",
        "returns": [
          {
            "type": "number"
          }
        ]
      },
      {
        "name": "searchSentTelemetry",
        "type": "function",
        "async": true,
        "description":
          "Search locally stored telemetry pings using these fields (if set)\n\nn:\n  if set, no more than `n` pings.\ntype:\n  Array of 'ping types' (e.g., main, crash, shield-study-addon) to filter\nminimumTimestamp:\n  only pings after this timestamp.\nheadersOnly:\n  boolean.  If true, only the 'headers' will be returned.\n\nPings will be returned sorted by timestamp with most recent first.\n\nUsage scenarios:\n- enrollment / eligiblity using recent Telemetry behaviours or client environment\n- add-on testing scenarios\n",
        "defaultReturn": [
          {
            "pingType": "main"
          }
        ],
        "parameters": [
          {
            "name": "searchTelemetryQuery",
            "$ref": "searchTelemetryQuery"
          }
        ]
      },
      {
        "name": "validateJSON",
        "type": "function",
        "async": true,
        "defaultReturn": {
          "valid": true,
          "errors": []
        },
        "description":
          "Using AJV, do jsonschema validation of an object.  Can be used to validate your arguments, packets at client.",
        "parameters": [
          {
            "name": "someJson",
            "type": "object",
            "additionalProperties": true
          },
          {
            "name": "jsonschema",
            "type": "object",
            "descripton": "a valid jsonschema object",
            "additionalProperties": true
          }
        ]
      },
      {
        "name": "fullSurveyUrl",
        "type": "function",
        "async": true,
        "defaultReturn": "https://foo.com/?reason=foo&addon=1.0.0",
        "description":
          "Annotates the supplied survey base url with common survey parameters (study name, variation, updateChannel, fxVersion, add-on version and client id)",
        "parameters": [
          {
            "name": "surveyBaseUrl",
            "type": "string"
          },
          {
            "name": "reason",
            "type": "string"
          }
        ],
        "returns": [
          {
            "type": "object"
          },
          {
            "parameters": null,
            "valid": [
              {
                "type": "boolean"
              }
            ],
            "errors": [
              {
                "type": "array"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "namespace": "studyDebug",
    "description": "Interface for Test Utilities",
    "apiVersion": 5,
    "functions": [
      {
        "name": "throwAnException",
        "type": "function",
        "description":
          "Throws an exception from a privileged function - for making sure that we can catch these in our web extension",
        "async": false,
        "parameters": [
          {
            "name": "message",
            "type": "string"
          }
        ]
      },
      {
        "name": "throwAnExceptionAsync",
        "type": "function",
        "description":
          "Throws an exception from a privileged async function - for making sure that we can catch these in our web extension",
        "async": true,
        "parameters": [
          {
            "name": "message",
            "type": "string"
          }
        ]
      },
      {
        "name": "recordSeenTelemetry",
        "type": "function",
        "async": true,
        "description": "Record seen study telemetry",
        "parameters": []
      },
      {
        "name": "getSeenTelemetry",
        "type": "function",
        "async": true,
        "description":
          "Return array of seen telemetry. Fully populated only if recordSeenTelemetry() has been run",
        "parameters": []
      },
      {
        "name": "resetSeenTelemetry",
        "type": "function",
        "async": true,
        "description": "Empty the array of seen telemetry",
        "parameters": []
      },
      {
        "name": "getInternalTestingOverrides",
        "type": "function",
        "async": true,
        "description":
          "Returns an object with the following keys:\n  studyType - to be able to test add-ons with different studyType configurations\nUsed to override study testing flags in getStudySetup().\nThe values are set by the corresponding preference under the `extensions.${widgetId}.test.*` preference branch.\n",
        "parameters": []
      }
    ]
  }
]
